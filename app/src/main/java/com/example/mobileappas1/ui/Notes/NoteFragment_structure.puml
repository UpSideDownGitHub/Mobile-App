@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.mobileappas1.ui.Notes.NoteFragment",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1233910364 { 
   	label=mobileappas1
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Note460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Note</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   contents: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   title: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NoteFragment460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NoteFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   adapter: NotesAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   binding: FragmentNoteBinding [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   notesData: NotesData [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   outputStream: FileOutputStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   playerID: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addNewClicked(view: View)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createFile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ isFilePresent(context: Context, fileName: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDestroyView()</TD></TR>
<TR><TD ALIGN="LEFT" >+ readFile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ writeFile()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotesAdapter460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotesAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   activity: FragmentActivity [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   context: Context [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentNoteID: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   globalPosition: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   noteList: ArrayList [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addValue(value: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onBindViewHolder(holder: ViewHolder, position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateViewHolder(parent: ViewGroup, viewType: int): ViewHolder</TD></TR>
<TR><TD ALIGN="LEFT" >+ update()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NotesData460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NotesData</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   users: Users [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

User460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   notes: ArrayList&lt;Note&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Users460169252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Users</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   user: ArrayList&lt;User&gt; [0..*]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
NoteFragment460169252 -> NotesAdapter460169252[label="adapter
[0..1]"];
NoteFragment460169252 -> NotesData460169252[label="notesData
[0..1]"];
NotesData460169252 -> Users460169252[label="users
[0..1]"];
User460169252 -> Note460169252[label="notes
[0..*]"];
Users460169252 -> User460169252[label="user
[0..*]"];
    
}
@enduml